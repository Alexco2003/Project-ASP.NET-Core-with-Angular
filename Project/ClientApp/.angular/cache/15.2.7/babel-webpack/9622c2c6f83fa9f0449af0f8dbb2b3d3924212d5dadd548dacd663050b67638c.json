{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    if (this.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport default AuthGuard;","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAErCC,WAAW;IACT,IAAI,IAAI,CAACC,UAAU,EAAE,EAAE;MACrB,OAAO,IAAI;KACZ,MAAM;MAEL,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEhB;EAEQD,UAAU;IAEhB,OAAO,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;;AAjBWP,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAQ,SAATR,SAAS;EAAAS,YAFR;AAAM;AAsBpB,eAAeT,SAAS","names":["AuthGuard","constructor","router","canActivate","isLoggedIn","navigate","localStorage","getItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Alexco\\Desktop\\proiect .net\\Project\\Project\\ClientApp\\src\\app\\auth\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.isLoggedIn()) {\r\n      return true;\r\n    } else {\r\n\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private isLoggedIn(): boolean {\r\n\r\n    return !!localStorage.getItem('token');\r\n  }\r\n}\r\n\r\nexport default AuthGuard;\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}