{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Alexco/Desktop/proiect .net/Project/Project/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { LogLevel } from \"./ILogger\";\nimport { NullLogger } from \"./Loggers\";\n// Version token that will be replaced by the prepack command\n/** The version of the SignalR client. */\nexport const VERSION = \"8.0.0\";\n/** @private */\nexport class Arg {\n  static isRequired(val, name) {\n    if (val === null || val === undefined) {\n      throw new Error(`The '${name}' argument is required.`);\n    }\n  }\n  static isNotEmpty(val, name) {\n    if (!val || val.match(/^\\s*$/)) {\n      throw new Error(`The '${name}' argument should not be empty.`);\n    }\n  }\n  static isIn(val, values, name) {\n    // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\n    if (!(val in values)) {\n      throw new Error(`Unknown ${name} value: ${val}.`);\n    }\n  }\n}\n/** @private */\nexport class Platform {\n  // react-native has a window but no document so we should check both\n  static get isBrowser() {\n    return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\n  }\n  // WebWorkers don't have a window object so the isBrowser check would fail\n  static get isWebWorker() {\n    return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\n  }\n  // react-native has a window but no document\n  static get isReactNative() {\n    return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\n  }\n  // Node apps shouldn't have a window object, but WebWorkers don't either\n  // so we need to check for both WebWorker and window\n  static get isNode() {\n    return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\n  }\n}\n/** @private */\nexport function getDataDetail(data, includeContent) {\n  let detail = \"\";\n  if (isArrayBuffer(data)) {\n    detail = `Binary data of length ${data.byteLength}`;\n    if (includeContent) {\n      detail += `. Content: '${formatArrayBuffer(data)}'`;\n    }\n  } else if (typeof data === \"string\") {\n    detail = `String data of length ${data.length}`;\n    if (includeContent) {\n      detail += `. Content: '${data}'`;\n    }\n  }\n  return detail;\n}\n/** @private */\nexport function formatArrayBuffer(data) {\n  const view = new Uint8Array(data);\n  // Uint8Array.map only supports returning another Uint8Array?\n  let str = \"\";\n  view.forEach(num => {\n    const pad = num < 16 ? \"0\" : \"\";\n    str += `0x${pad}${num.toString(16)} `;\n  });\n  // Trim of trailing space.\n  return str.substr(0, str.length - 1);\n}\n// Also in signalr-protocol-msgpack/Utils.ts\n/** @private */\nexport function isArrayBuffer(val) {\n  return val && typeof ArrayBuffer !== \"undefined\" && (val instanceof ArrayBuffer ||\n  // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\n  val.constructor && val.constructor.name === \"ArrayBuffer\");\n}\n/** @private */\nexport function sendMessage(_x, _x2, _x3, _x4, _x5, _x6) {\n  return _sendMessage.apply(this, arguments);\n}\n/** @private */\nfunction _sendMessage() {\n  _sendMessage = _asyncToGenerator(function* (logger, transportName, httpClient, url, content, options) {\n    const headers = {};\n    const [name, value] = getUserAgentHeader();\n    headers[name] = value;\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\n    const response = yield httpClient.post(url, {\n      content,\n      headers: {\n        ...headers,\n        ...options.headers\n      },\n      responseType,\n      timeout: options.timeout,\n      withCredentials: options.withCredentials\n    });\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\n  });\n  return _sendMessage.apply(this, arguments);\n}\nexport function createLogger(logger) {\n  if (logger === undefined) {\n    return new ConsoleLogger(LogLevel.Information);\n  }\n  if (logger === null) {\n    return NullLogger.instance;\n  }\n  if (logger.log !== undefined) {\n    return logger;\n  }\n  return new ConsoleLogger(logger);\n}\n/** @private */\nexport class SubjectSubscription {\n  constructor(subject, observer) {\n    this._subject = subject;\n    this._observer = observer;\n  }\n  dispose() {\n    const index = this._subject.observers.indexOf(this._observer);\n    if (index > -1) {\n      this._subject.observers.splice(index, 1);\n    }\n    if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\n      this._subject.cancelCallback().catch(_ => {});\n    }\n  }\n}\n/** @private */\nexport class ConsoleLogger {\n  constructor(minimumLogLevel) {\n    this._minLevel = minimumLogLevel;\n    this.out = console;\n  }\n  log(logLevel, message) {\n    if (logLevel >= this._minLevel) {\n      const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\n      switch (logLevel) {\n        case LogLevel.Critical:\n        case LogLevel.Error:\n          this.out.error(msg);\n          break;\n        case LogLevel.Warning:\n          this.out.warn(msg);\n          break;\n        case LogLevel.Information:\n          this.out.info(msg);\n          break;\n        default:\n          // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\n          this.out.log(msg);\n          break;\n      }\n    }\n  }\n}\n/** @private */\nexport function getUserAgentHeader() {\n  let userAgentHeaderName = \"X-SignalR-User-Agent\";\n  if (Platform.isNode) {\n    userAgentHeaderName = \"User-Agent\";\n  }\n  return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\n}\n/** @private */\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\n  // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\n  let userAgent = \"Microsoft SignalR/\";\n  const majorAndMinor = version.split(\".\");\n  userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\n  userAgent += ` (${version}; `;\n  if (os && os !== \"\") {\n    userAgent += `${os}; `;\n  } else {\n    userAgent += \"Unknown OS; \";\n  }\n  userAgent += `${runtime}`;\n  if (runtimeVersion) {\n    userAgent += `; ${runtimeVersion}`;\n  } else {\n    userAgent += \"; Unknown Runtime Version\";\n  }\n  userAgent += \")\";\n  return userAgent;\n}\n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/\nfunction getOsName() {\n  if (Platform.isNode) {\n    switch (process.platform) {\n      case \"win32\":\n        return \"Windows NT\";\n      case \"darwin\":\n        return \"macOS\";\n      case \"linux\":\n        return \"Linux\";\n      default:\n        return process.platform;\n    }\n  } else {\n    return \"\";\n  }\n}\n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/\nfunction getRuntimeVersion() {\n  if (Platform.isNode) {\n    return process.versions.node;\n  }\n  return undefined;\n}\nfunction getRuntime() {\n  if (Platform.isNode) {\n    return \"NodeJS\";\n  } else {\n    return \"Browser\";\n  }\n}\n/** @private */\nexport function getErrorString(e) {\n  if (e.stack) {\n    return e.stack;\n  } else if (e.message) {\n    return e.message;\n  }\n  return `${e}`;\n}\n/** @private */\nexport function getGlobalThis() {\n  // globalThis is semi-new and not available in Node until v12\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw new Error(\"could not find global\");\n}","map":{"version":3,"names":["LogLevel","NullLogger","VERSION","Arg","isRequired","val","name","undefined","Error","isNotEmpty","match","isIn","values","Platform","isBrowser","isNode","window","document","isWebWorker","self","isReactNative","process","release","getDataDetail","data","includeContent","detail","isArrayBuffer","byteLength","formatArrayBuffer","length","view","Uint8Array","str","forEach","num","pad","toString","substr","ArrayBuffer","constructor","sendMessage","logger","transportName","httpClient","url","content","options","headers","value","getUserAgentHeader","log","Trace","logMessageContent","responseType","response","post","timeout","withCredentials","statusCode","createLogger","ConsoleLogger","Information","instance","SubjectSubscription","subject","observer","_subject","_observer","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","_minLevel","out","console","logLevel","message","msg","Date","toISOString","Critical","error","Warning","warn","info","userAgentHeaderName","constructUserAgent","getOsName","getRuntime","getRuntimeVersion","version","os","runtime","runtimeVersion","userAgent","majorAndMinor","split","platform","versions","node","getErrorString","e","stack","getGlobalThis","globalThis","global"],"sources":["C:/Users/Alexco/Desktop/proiect .net/Project/Project/ClientApp/node_modules/@microsoft/signalr/dist/esm/Utils.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION = \"8.0.0\";\r\n/** @private */\r\nexport class Arg {\r\n    static isRequired(val, name) {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    static isNotEmpty(val, name) {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n    static isIn(val, values, name) {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    static get isBrowser() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    static get isWebWorker() {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n    // react-native has a window but no document\r\n    static get isReactNative() {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    static get isNode() {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getDataDetail(data, includeContent) {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    }\r\n    else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n/** @private */\r\nexport function formatArrayBuffer(data) {\r\n    const view = new Uint8Array(data);\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val) {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n/** @private */\r\nexport async function sendMessage(logger, transportName, httpClient, url, content, options) {\r\n    const headers = {};\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers },\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n/** @private */\r\nexport function createLogger(logger) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n    if (logger.log !== undefined) {\r\n        return logger;\r\n    }\r\n    return new ConsoleLogger(logger);\r\n}\r\n/** @private */\r\nexport class SubjectSubscription {\r\n    constructor(subject, observer) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n    dispose() {\r\n        const index = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport class ConsoleLogger {\r\n    constructor(minimumLogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n    log(logLevel, message) {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @private */\r\nexport function getUserAgentHeader() {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];\r\n}\r\n/** @private */\r\nexport function constructUserAgent(version, os, runtime, runtimeVersion) {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent = \"Microsoft SignalR/\";\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    }\r\n    else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n    userAgent += `${runtime}`;\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    }\r\n    else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName() {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    }\r\n    else {\r\n        return \"\";\r\n    }\r\n}\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion() {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getRuntime() {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    }\r\n    else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n/** @private */\r\nexport function getErrorString(e) {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    }\r\n    else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n/** @private */\r\nexport function getGlobalThis() {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}